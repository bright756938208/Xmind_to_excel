[excel_config_template_chose]
# 选择需要使用的excel模板，会根据模板配置来生成excel，填写多个则生成多份excel
excel_template_name_list = ["测试用例模板分子目录"]

#用来打印读取到的xmind数据，当不为0则打印
print_xmind_data = 0

#打印xmind转换成一行一行后的数据，当不为0则打印
print_xmind_row_data = 0

#打印根据xmind节点配置转换成的excel数据，不包含去重后的数据，当不为0则打印
print_excel_data = 0


#excel模板配置, 配置方法可参考最底部 模板配置说明

[测试用例模板分子目录]
excel_label_list = ["用例目录*","用例名称*","优先级","前置条件","步骤","预期结果"]
column_width_list = [18, 35, 9, 15, 50, 50]
not_repeat_column = {"用例名称*":2}
column_default_value = {}

nodes_config_dict = {"3":"3_nodes", "4":"4_nodes", "5":"5_nodes", "6|7|8":"6_8_nodes"}

3_nodes = {"用例目录*":"0",
          "用例名称*":"if:-2.note:-2|if:-2.markers:-2|1~-1",
          "优先级":"-1.markers|-2.markers",
          "前置条件":"-1.label|-2.label",
          "步骤":"-1.note|-2.note|if:-2.markers:-2|-1",
          "预期结果":"-1"}

4_nodes = {"用例目录*":"if:-2.note:-3|if:-2.markers:-3|0",
          "用例名称*":"if:-2.note:-2|if:-1.note:-2~-1|if:-2.markers:-2|if:-1.markers:-2~-1|1",
          "优先级":"-1.markers|-2.markers|-3.markers",
          "前置条件":"-1.label|-2.label",
          "步骤":"-1.note|-2.note|if:-1.markers:-1|-2",
          "预期结果":"-1"}

5_nodes = {"用例目录*":"1",
            "用例名称*":"if:-2.note:2~-2|if:-1.note:2~-1|if:-1.markers:2~-1|if:-2.markers:2~-2|2",
            "优先级":"-2.markers|-3.markers|-1.markers",
            "前置条件":"-2.label|-3.label|-1.label",
            "步骤":"-2.note|-1.note|if:-1.markers:-1|-2",
            "预期结果":"-1"}

6_8_nodes = {"用例目录*":"1",
            "用例名称*":"if:-2.note:2~-2|if:-1.note:2~-1|if:-1.markers:2~-1|if:-2.markers:2~-2|2~-3",
            "优先级":"-2.markers|-3.markers|-1.markers",
            "前置条件":"-2.label|-3.label|-1.label",
            "步骤":"-2.note|-1.note|if:-1.markers:-1|-2",
            "预期结果":"-1",}

replace_markers = {"priority-1":"P0", "priority-2":"P1", "priority-3":"P2", "priority-4":"P3"}

font_size = 14
bold = 0
text_wrap = 1



[测试用例无子目录]
excel_label_list = ["用例目录*","用例名称*","优先级","前置条件","步骤","预期结果"]
column_width_list = [18, 35, 9, 15, 50, 50]
not_repeat_column = {"用例名称*":2}
column_default_value = {}

nodes_config_dict = {"3":"3_nodes", "4":"4_nodes", "5":"5_nodes", "6|7|8":"6_8_nodes"}

3_nodes = {"用例目录*":"0",
          "用例名称*":"if:-1.note:-1|if:-1.markers:-1|1",
          "优先级":"-1.markers|-2.markers",
          "前置条件":"-1.label|-2.label",
          "步骤":"-1.note|-2.note|if:-2.markers:-2|-1",
          "预期结果":"-1"}

4_nodes = {"用例目录*":"0",
          "用例名称*":"if:-2.note:·1~-2|if:-1.note:1~-1|if:-2.markers:1~-2|if:-1.markers:1~-1|1",
          "优先级":"-1.markers|-2.markers|-3.markers",
          "前置条件":"-1.label|-2.label",
          "步骤":"-1.note|-2.note|if:-1.markers:-1|-2",
          "预期结果":"-1"}

5_nodes = {"用例目录*":"0",
            "用例名称*":"if:-2.note:1~-2|if:-1.note:1~-1|if:-1.markers:1~-1|if:-2.markers:1~-2|1~2",
            "优先级":"-2.markers|-3.markers|-1.markers",
            "前置条件":"-2.label|-3.label|-1.label",
            "步骤":"-2.note|-1.note|if:-1.markers:-1|-2",
            "预期结果":"-1"}

6_8_nodes = {"用例目录*":"0",
            "用例名称*":"if:-2.note:1~-2|if:-1.note:1~-1|if:-1.markers:1~-1|if:-2.markers:1~-2|1~-3",
            "优先级":"-2.markers|-3.markers|-1.markers",
            "前置条件":"-2.label|-3.label|-1.label",
            "步骤":"-2.note|-1.note|if:-1.markers:-1|-2",
            "预期结果":"-1",}

replace_markers = {"priority-1":"P0", "priority-2":"P1", "priority-3":"P2", "priority-4":"P3"}

font_size = 14
bold = 0
text_wrap = 1


#模板配置说明
[excel_default_template]
#ini配置内容 另起一行显示的方法，普通文本编辑器应该不行，最好用代码编辑器，在要换行的地方加一个空格，然后光标移动到空格左边，再按回车即可换行显示
#表格每列第一行内容, 可根据实际情况自己添加或删除，代码可自动适应
excel_label_list = ["用例目录","用例名称","优先级","前提条件","用例步骤","期待结果","用例类型","版本号"]

#表格每列的宽度设置, 从左到右一一对应excel_labels中的宽度，不设置默认是15
column_width_list = [18, 30, 9, 15, 50, 50, 12, 9]

#设置需要处理含有重复的值的列名，可配置多个；
#value是当有重复时的处理方式, 不为1、2则默认打印出重复的数据并报错转不成功；为1则会追加_1、_2、_3……等数字避免重复；为2则只会打印重复数据
not_repeat_column = {"用例名称":2, "用例步骤":2 }

#设置某一个列的默认值，当节点配置中没有配置该列的值或只能取到空值时，取配置默认值，可配置多个
column_default_value = {"用例类型":"功能逻辑"}

#对不同节点数用不同的方案数据提取方案；key必须用数字表示有多少层节点，可用 | 分开表示多个节点，节点数包含根节点，value用对应方案的变量名，如key用5,value用5_nodes,表示节点只有5层时，用下面5_nodes中的方案来提取数据; 不配置对应节点数，则使用默认的处理方式：将每一级按顺序写到一行
nodes_config_dict = {"2":"2_nodes", "3|4":"3_4_nodes", "5|6|7|8":"5_8_nodes"}

# excel列内容对应mxind的具体层级内容配置说明，0对应主题中心这根层级，1代表它的第1个节点，-1就是代表倒数第一级也就是最后一级，-2就是倒数第二级，用~表示从第几级到第几级；层级没有数量限制，配置提取多少层就支持提取多少层
# 用.加关键字来表示xmind一个节点对应的子类数据，不写.则默认使用.title（也就是xmind节点上写的内容），写.XXXX就代表提取这个节点的子类数据
# xmind子类数据说明 图标:markers，备注:note，标签:label，超链接:link，批注:comment，如xmind有更新其他字段，可对应修改或添加应该也能适应；其中markers包含子项，可追加.关键字来提取，例如.markers.flag(代表旗子)；如不追加只写.markers则默认为使用.priority(优先级)；
# markers其他子项关键字说明可以用print_xmind_data=1来打印出来，然后搜索markers来看，markers中的子项关键字可模糊匹配，如priority-3(优先级3), 则关键字写成 .pri,.priority,.orit……等等都可以
# 规则中支持添加前提条件:在开始地方用加入if、ifnot关键字，再用两个:将中间内容条件包起来，则会以中间的内容作为条件;if则是满足中间的条件(不为空)时才会使用这个规则，ifnot则是不满足中间的条件(也就是当中间的条件为空时)才会使用这个规则；
# 可使用 | 来添加2个以上规则，优先使用前面的规则，前面规则匹配到的内容为空时则使用|后面的规则; 注意所有规则中都不要有空格和中文字符.
2_nodes = {"用例目录":"0","用例名称":"1",
          "优先级":"-1.markers",
          "前提条件":"1.label",
          "用例步骤":"1.note|1",
          "期待结果":"-1","版本号":"0.note"}

3_4_nodes = {"用例目录":"0",
            "用例名称":"if:-2.note:1~-2|if:-1.note:1~-1|if:-1.markers:1~-1|1~-2",
            "优先级":"-2.markers|-1.markers|-3.markers",
            "前提条件":"-2.label|-1.label|-3.label",
            "用例步骤":"-2.note|-1.note|if:-1.markers:-1|-2",
            "期待结果":"-1","版本号":"0.note"}

5_8_nodes = {"用例目录":"1",
            "用例名称":"if:-2.note:2~-2|ifnot:-2.markers:2~-3|2~-2",
            "优先级":"-3.markers.priority|-2.markers|-1.markers",
            "前提条件":"-2.label|-3.label",
            "用例步骤":"-2.note|-2",
            "期待结果":"-1","版本号":"0.note"}

#替换掉xmind中添加图标的值，priority是优先级，可自己修改其值，具体原始值是什么，可以打印读取到的xmind数据来查看。 
#例如
replace_markers = {"priority-1":"优先级1", "priority-2":"优先级2", "priority-3":"优先级3", "priority-4":"优先级4",
                  "star-red":"功能逻辑", "star-orange":"UI与系统兼容"}

#markers简单说明
"markers": [
           "priority-1",  优先级1
           "smiley-smile",  表情微笑
           "task-start",  任务进度
           "flag-blue",  旗子
           "star-red",  星星
           "people-red",  人像
           "arrow-up",   箭头
           "c_symbol_flight",  符号
           "month-jan",   月份
           "week-sun"   星期
           ]

#字体大小
font_size = 14

#是否粗体字,0代表不是粗体，不为0则是粗体
bold = 1

#自动换行,0代表不自动换行，不为0则是自动换行
text_wrap = 1